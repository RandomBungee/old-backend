// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group/group_service.proto

package com.gitlab.leonklein.group;

/**
 * Protobuf type {@code group.ListRoleResponse}
 */
public  final class ListRoleResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:group.ListRoleResponse)
    ListRoleResponseOrBuilder {
  // Use ListRoleResponse.newBuilder() to construct.
  private ListRoleResponse(com.google.protobuf.GeneratedMessage.Builder builder) {
    super(builder);
  }
  private ListRoleResponse() {
    role_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ListRoleResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              role_ = new java.util.ArrayList<com.gitlab.leonklein.group.Group>();
              mutable_bitField0_ |= 0x00000001;
            }
            role_.add(input.readMessage(com.gitlab.leonklein.group.Group.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        role_ = java.util.Collections.unmodifiableList(role_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.gitlab.leonklein.group.GroupServiceOuterClass.internal_static_group_ListRoleResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.gitlab.leonklein.group.GroupServiceOuterClass.internal_static_group_ListRoleResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.gitlab.leonklein.group.ListRoleResponse.class, com.gitlab.leonklein.group.ListRoleResponse.Builder.class);
  }

  public static final int ROLE_FIELD_NUMBER = 1;
  private java.util.List<com.gitlab.leonklein.group.Group> role_;
  /**
   * <code>repeated .group.Group role = 1;</code>
   */
  public java.util.List<com.gitlab.leonklein.group.Group> getRoleList() {
    return role_;
  }
  /**
   * <code>repeated .group.Group role = 1;</code>
   */
  public java.util.List<? extends com.gitlab.leonklein.group.GroupOrBuilder> 
      getRoleOrBuilderList() {
    return role_;
  }
  /**
   * <code>repeated .group.Group role = 1;</code>
   */
  public int getRoleCount() {
    return role_.size();
  }
  /**
   * <code>repeated .group.Group role = 1;</code>
   */
  public com.gitlab.leonklein.group.Group getRole(int index) {
    return role_.get(index);
  }
  /**
   * <code>repeated .group.Group role = 1;</code>
   */
  public com.gitlab.leonklein.group.GroupOrBuilder getRoleOrBuilder(
      int index) {
    return role_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < role_.size(); i++) {
      output.writeMessage(1, role_.get(i));
    }
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < role_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, role_.get(i));
    }
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.gitlab.leonklein.group.ListRoleResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.gitlab.leonklein.group.ListRoleResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code group.ListRoleResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:group.ListRoleResponse)
      com.gitlab.leonklein.group.ListRoleResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.gitlab.leonklein.group.GroupServiceOuterClass.internal_static_group_ListRoleResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.gitlab.leonklein.group.GroupServiceOuterClass.internal_static_group_ListRoleResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.gitlab.leonklein.group.ListRoleResponse.class, com.gitlab.leonklein.group.ListRoleResponse.Builder.class);
    }

    // Construct using com.gitlab.leonklein.group.ListRoleResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getRoleFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (roleBuilder_ == null) {
        role_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        roleBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.gitlab.leonklein.group.GroupServiceOuterClass.internal_static_group_ListRoleResponse_descriptor;
    }

    public com.gitlab.leonklein.group.ListRoleResponse getDefaultInstanceForType() {
      return com.gitlab.leonklein.group.ListRoleResponse.getDefaultInstance();
    }

    public com.gitlab.leonklein.group.ListRoleResponse build() {
      com.gitlab.leonklein.group.ListRoleResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.gitlab.leonklein.group.ListRoleResponse buildPartial() {
      com.gitlab.leonklein.group.ListRoleResponse result = new com.gitlab.leonklein.group.ListRoleResponse(this);
      int from_bitField0_ = bitField0_;
      if (roleBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          role_ = java.util.Collections.unmodifiableList(role_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.role_ = role_;
      } else {
        result.role_ = roleBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.gitlab.leonklein.group.ListRoleResponse) {
        return mergeFrom((com.gitlab.leonklein.group.ListRoleResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.gitlab.leonklein.group.ListRoleResponse other) {
      if (other == com.gitlab.leonklein.group.ListRoleResponse.getDefaultInstance()) return this;
      if (roleBuilder_ == null) {
        if (!other.role_.isEmpty()) {
          if (role_.isEmpty()) {
            role_ = other.role_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRoleIsMutable();
            role_.addAll(other.role_);
          }
          onChanged();
        }
      } else {
        if (!other.role_.isEmpty()) {
          if (roleBuilder_.isEmpty()) {
            roleBuilder_.dispose();
            roleBuilder_ = null;
            role_ = other.role_;
            bitField0_ = (bitField0_ & ~0x00000001);
            roleBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getRoleFieldBuilder() : null;
          } else {
            roleBuilder_.addAllMessages(other.role_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.gitlab.leonklein.group.ListRoleResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.gitlab.leonklein.group.ListRoleResponse) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.gitlab.leonklein.group.Group> role_ =
      java.util.Collections.emptyList();
    private void ensureRoleIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        role_ = new java.util.ArrayList<com.gitlab.leonklein.group.Group>(role_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.gitlab.leonklein.group.Group, com.gitlab.leonklein.group.Group.Builder, com.gitlab.leonklein.group.GroupOrBuilder> roleBuilder_;

    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public java.util.List<com.gitlab.leonklein.group.Group> getRoleList() {
      if (roleBuilder_ == null) {
        return java.util.Collections.unmodifiableList(role_);
      } else {
        return roleBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public int getRoleCount() {
      if (roleBuilder_ == null) {
        return role_.size();
      } else {
        return roleBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public com.gitlab.leonklein.group.Group getRole(int index) {
      if (roleBuilder_ == null) {
        return role_.get(index);
      } else {
        return roleBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder setRole(
        int index, com.gitlab.leonklein.group.Group value) {
      if (roleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleIsMutable();
        role_.set(index, value);
        onChanged();
      } else {
        roleBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder setRole(
        int index, com.gitlab.leonklein.group.Group.Builder builderForValue) {
      if (roleBuilder_ == null) {
        ensureRoleIsMutable();
        role_.set(index, builderForValue.build());
        onChanged();
      } else {
        roleBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder addRole(com.gitlab.leonklein.group.Group value) {
      if (roleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleIsMutable();
        role_.add(value);
        onChanged();
      } else {
        roleBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder addRole(
        int index, com.gitlab.leonklein.group.Group value) {
      if (roleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRoleIsMutable();
        role_.add(index, value);
        onChanged();
      } else {
        roleBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder addRole(
        com.gitlab.leonklein.group.Group.Builder builderForValue) {
      if (roleBuilder_ == null) {
        ensureRoleIsMutable();
        role_.add(builderForValue.build());
        onChanged();
      } else {
        roleBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder addRole(
        int index, com.gitlab.leonklein.group.Group.Builder builderForValue) {
      if (roleBuilder_ == null) {
        ensureRoleIsMutable();
        role_.add(index, builderForValue.build());
        onChanged();
      } else {
        roleBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder addAllRole(
        java.lang.Iterable<? extends com.gitlab.leonklein.group.Group> values) {
      if (roleBuilder_ == null) {
        ensureRoleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, role_);
        onChanged();
      } else {
        roleBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder clearRole() {
      if (roleBuilder_ == null) {
        role_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        roleBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public Builder removeRole(int index) {
      if (roleBuilder_ == null) {
        ensureRoleIsMutable();
        role_.remove(index);
        onChanged();
      } else {
        roleBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public com.gitlab.leonklein.group.Group.Builder getRoleBuilder(
        int index) {
      return getRoleFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public com.gitlab.leonklein.group.GroupOrBuilder getRoleOrBuilder(
        int index) {
      if (roleBuilder_ == null) {
        return role_.get(index);  } else {
        return roleBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public java.util.List<? extends com.gitlab.leonklein.group.GroupOrBuilder> 
         getRoleOrBuilderList() {
      if (roleBuilder_ != null) {
        return roleBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(role_);
      }
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public com.gitlab.leonklein.group.Group.Builder addRoleBuilder() {
      return getRoleFieldBuilder().addBuilder(
          com.gitlab.leonklein.group.Group.getDefaultInstance());
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public com.gitlab.leonklein.group.Group.Builder addRoleBuilder(
        int index) {
      return getRoleFieldBuilder().addBuilder(
          index, com.gitlab.leonklein.group.Group.getDefaultInstance());
    }
    /**
     * <code>repeated .group.Group role = 1;</code>
     */
    public java.util.List<com.gitlab.leonklein.group.Group.Builder> 
         getRoleBuilderList() {
      return getRoleFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.gitlab.leonklein.group.Group, com.gitlab.leonklein.group.Group.Builder, com.gitlab.leonklein.group.GroupOrBuilder> 
        getRoleFieldBuilder() {
      if (roleBuilder_ == null) {
        roleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.gitlab.leonklein.group.Group, com.gitlab.leonklein.group.Group.Builder, com.gitlab.leonklein.group.GroupOrBuilder>(
                role_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        role_ = null;
      }
      return roleBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:group.ListRoleResponse)
  }

  // @@protoc_insertion_point(class_scope:group.ListRoleResponse)
  private static final com.gitlab.leonklein.group.ListRoleResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.gitlab.leonklein.group.ListRoleResponse();
  }

  public static com.gitlab.leonklein.group.ListRoleResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  public static final com.google.protobuf.Parser<ListRoleResponse> PARSER =
      new com.google.protobuf.AbstractParser<ListRoleResponse>() {
    public ListRoleResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new ListRoleResponse(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<ListRoleResponse> getParserForType() {
    return PARSER;
  }

  public com.gitlab.leonklein.group.ListRoleResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

